name: Release HelloWorld

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'corretto'
      - name: Set up yq
        run: |
          echo $(pwd) >> $GITHUB_PATH
          wget -qO $(pwd)/yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
          chmod a+x $(pwd)/yq
      - name: Get release info
        working-directory: './spring-boot-helloworld'
        run: |
          echo "application-name=$(yq --xml-attribute-prefix @ -p=xml '.project.name' pom.xml)" >> $GITHUB_OUTPUT
          echo "application-version=$(yq --xml-attribute-prefix @ -p=xml '.project.version' pom.xml)" >> $GITHUB_OUTPUT
          echo "application-date=$(date +'%Y-%m-%d' --date='+9 hour')" >> $GITHUB_OUTPUT
        id: release-info
      - name: Create yajsw
        uses: meta205/actions-yajsw@v1
        with:
          tag-name: 'v1'
          dist-path: './spring-boot-helloworld/release'
          service-name: 'spring-boot-helloworld'
          java-app-jar-file: '${{ steps.release-info.outputs.application-name }}-${{ steps.release-info.outputs.application-version }}.jar'
          java-vm-options: '-Duser.home=${wrapper_home}/..'
          java-max-memory: '16384'
      - name: Create release files
        working-directory: './spring-boot-helloworld'
        run: |
          mvn package
          mkdir -p ./release/config
          cp ./config/application.yaml ./release/config
          cp ./target/${{ steps.release-info.outputs.application-name }}-${{ steps.release-info.outputs.application-version }}.jar ./release
          cd ./release
          zip -r ../${{ steps.release-info.outputs.application-name }}-${{ steps.release-info.outputs.application-version }}.zip ./*
      - name: Create release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release-info.outputs.application-version }}
          release_name: ${{ steps.release-info.outputs.application-version }}
        id: create-release
      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./spring-boot-helloworld/${{ steps.release-info.outputs.application-name }}-${{ steps.release-info.outputs.application-version }}.zip
          asset_name: ${{ steps.release-info.outputs.application-name }}-${{ steps.release-info.outputs.application-version }}.zip
          asset_content_type: application/zip
